1 -> Configuracao das Constants


2 -> Configuracao da Model
     Deixar apenas a ResponseApi chamando RickMorty


3 -> Config o BuildGRadle

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.bersyte.paging3"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures{
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
 //Paging
    implementation "androidx.paging:paging-runtime-ktx:3.1.0-alpha03"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.2"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2-native-mt'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2-native-mt'

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"
    implementation "androidx.activity:activity-ktx:1.3.1"

    //dagger-hilt
    implementation "com.google.dagger:hilt-android:2.37"
    kapt "com.google.dagger:hilt-android-compiler:2.37"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    //coil
    implementation("io.coil-kt:coil:1.1.1")


4 -> Configuracao da API

    Cria uma interface ApiService
    nela voce consigura a chamada de api com retrofit:

     @GET(Constants.END_POINT)
        suspend fun getAllCharacters(
            @Query("page")page:Int
      ): Response<ResponseApi>


5 -> Conmfigurar a Injecao de Dependencia:

Crie um Pack: DI

Crie um Object AppModule

Crie uma Classe MYApplication com @HiltAndroidApp Herdando de Application

6 -> No Manifest lembre de Dar permissao para internet e inclua o android:name=".MyApplication"

7 -> Configurando o AppModule :

@Module
@InstallIn(SingletonComponent::class)
object AppModule {

    @Provides
    fun provideBaseUrl() = Constants.BASE_URL


    @Provides
    @Singleton
    fun provideRetrofitInstance(BASE_URL: String): ApiService =
        Retrofit.Builder()
            .baseUrl(BASE_URL)
            .addConverterFactory(GsonConverterFactory.create())
            .build()
            .create(ApiService::class.java)
}

8 ->ViewModel

9 -> Configure o Paging3

10 -> RecyclerView

11 -> Configurar o adapter


